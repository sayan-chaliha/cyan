/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2020, Sayan Chaliha
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 **/
#pragma once

#define STDC_HEADERS 1

#define CYAN_VERSION_MAJOR @PROJECT_VERSION_MAJOR@
#define CYAN_VERSION_MINOR @PROJECT_VERSION_MINOR@
#define CYAN_VERSION_PATCH @PROJECT_VERSION_PATCH@
#define CYAN_VERSION_TWEAK @PROJECT_VERSION_TWEAK@

/** UNIX-like system */
#cmakedefine UNIX 1
/** Apple */
#cmakedefine APPLE 1
/** Windows */
#cmakedefine WIN32 1

/** Symbols */
#cmakedefine HAVE_CLOCK_GETTIME 1
#cmakedefine HAVE_CLOCK_SYSCALL 1
#cmakedefine HAVE_DLFCN_H 1
#cmakedefine HAVE_EPOLL_CTL 1
#cmakedefine HAVE_EVENTFD 1
#cmakedefine HAVE_FLOOR 1
#cmakedefine HAVE_INOTIFY_INIT 1
#cmakedefine HAVE_KQUEUE 1

/** Libraries */
#cmakedefine HAVE_LIBRT 1
#cmakedefine HAVE_LIBC 1

/** Headers */
#cmakedefine HAVE_INTTYPES_H 1
#cmakedefine HAVE_MEMORY_H 1
#cmakedefine HAVE_NANOSLEEP 1
#cmakedefine HAVE_POLL 1
#cmakedefine HAVE_POLL_H 1
#cmakedefine HAVE_PORT_CREATE 1
#cmakedefine HAVE_PORT_H 1
#cmakedefine HAVE_SELECT 1
#cmakedefine HAVE_SIGNALFD 1
#cmakedefine HAVE_STDINT_H 1
#cmakedefine HAVE_STDLIB_H 1
#cmakedefine HAVE_STRINGS_H 1
#cmakedefine HAVE_STRING_H 1
#cmakedefine HAVE_SYS_EPOLL_H 1
#cmakedefine HAVE_SYS_EVENTFD_H 1
#cmakedefine HAVE_SYS_EVENT_H 1
#cmakedefine HAVE_SYS_INOTIFY_H 1
#cmakedefine HAVE_SYS_SELECT_H 1
#cmakedefine HAVE_SYS_SIGNALFD_H 1
#cmakedefine HAVE_SYS_STAT_H 1
#cmakedefine HAVE_SYS_TYPES_H 1
#cmakedefine HAVE_UNISTD_H 1
#cmakedefine HAVE_NETINET_IN_H 1
#cmakedefine HAVE_NETINET_IN6_H 1
#cmakedefine HAVE_NETDB_H 1
#cmakedefine HAVE_SYS_SOCKET_H 1
#cmakedefine HAVE_WINSOCK2_H 1
#cmakedefine HAVE_WS2TCPIP_H 1
#cmakedefine HAVE_WINSOCK_H 1
#cmakedefine HAVE_WINDOWS_H 1
#cmakedefine HAVE_FCNTL_H 1
#cmakedefine HAVE_ARPA_INET_H 1
#cmakedefine HAVE_NETINET_TCP_H 1

/** structs */
#cmakedefine HAVE_STRUCT_SOCKADDR 1
#cmakedefine SIZEOF_STRUCT_SOCKADDR @SIZEOF_STRUCT_SOCKADDR@

#cmakedefine HAVE_STRUCT_SOCKADDR_STORAGE 1
#cmakedefine SIZEOF_STRUCT_SOCKADDR_STORAGE @SIZEOF_STRUCT_SOCKADDR_STORAGE@

#cmakedefine HAVE_STRUCT_SOCKADDR_IN 1
#cmakedefine SIZEOF_STRUCT_SOCKADDR_IN @SIZEOF_STRUCT_SOCKADDR_IN@

#cmakedefine HAVE_STRUCT_IN_ADDR 1
#cmakedefine SIZEOF_STRUCT_IN_ADDR @SIZEOF_STRUCT_IN_ADDR@

#cmakedefine HAVE_STRUCT_SOCKADDR_IN6 1
#cmakedefine SIZEOF_STRUCT_SOCKADDR_IN6 @SIZEOF_STRUCT_SOCKADDR_IN6@

#cmakedefine HAVE_STRUCT_IN6_ADDR 1
#cmakedefine SIZEOF_STRUCT_IN6_ADDR @SIZEOF_STRUCT_IN6_ADDR@

#cmakedefine HAVE_STRUCT_LINGER 1
#cmakedefine SIZEOF_STRUCT_LINGER @SIZEOF_STRUCT_LINGER@

#cmakedefine HAVE_STRUCT_TIMEVAL 1
#cmakedefine SIZEOF_STRUCT_TIMEVAL @SIZEOF_STRUCT_TIMEVAL@

/** Symbols */
#cmakedefine HAVE_HARDWARE_DESTRUCTIVE_INTERFERENCE_SIZE 1

#cmakedefine HAVE___ATTRIBUTE__ 1
#cmakedefine HAVE___DECLSPEC 1

#ifdef HAVE___ATTRIBUTE__
# ifdef __CYAN_BUILD_DLL__
#   define CYAN_API              __attribute__((visibility ("default")))
#   define CYAN_HIDDEN           __attribute__((visibility ("hidden")))
# else
#   define CYAN_API              __attribute__((visibility ("default")))
#   define CYAN_HIDDEN
# endif /* __CYAN_BUILD__ */
#elif defined (HAVE___DECLSPEC)
# ifdef __CYAN_BUILD_DLL__
#   define CYAN_API              __declspec(dllexport)
#   define CYAN_HIDDEN
# else
#   define CYAN_API              __declspec(dllimport)
#   define CYAN_HIDDEN
# endif /* __CYAN_BUILD */
#else
# define CYAN_API
# define CYAN_HIDDEN
# define CYAN_NORETURN
#endif /* HAVE___ATTRIBUTE__ */

#ifdef HAVE___FUNC__
# define CYAN_FUNCTION              __func__
#elif defined (HAVE___FUNCTION__)
# define CYAN_FUNCTION              __FUNCTION__
#else
# define CYAN_FUNCTION
#endif /* HAVE___FUNC__ */
